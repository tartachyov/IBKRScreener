{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2CAAyD;AAMzD,cAAc;AACd,IAAM,IAAI,GAAG,UAAC,IAAW;IACrB,0BAA0B;IACpB,IAAA,sBAA2D,EAA1D,eAAc,EAAd,mCAAc,EAAE,eAAqB,EAArB,0CAA0C,CAAC;IAE5D,IAAA,eAA6C,EAA5C,YAAc,EAAd,mCAAc,EAAE,YAAc,EAAd,mCAA4B,CAAC;IAEpD,2BAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;IAE1C,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;QAC/B,SAAe,UAAU;;;;;gCACF,qBAAM,wBAAW,EAAE,EAAA;;4BAAhC,UAAU,GAAG,SAAmB;4BACtC,IAAI,UAAU,EAAE;gCACZ,sBAAO,OAAO,CAAC,IAAI,CAAC,EAAC;6BACxB;4BACD,MAAM,CAAC,0CAA0C,CAAC,CAAC;;;;;SACtD;QAED,UAAU,EAAE,CAAC;IACjB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAEF,qBAAqB;AACrB,+BAA0B;AAC1B,kCAA6B;AAC7B,iCAA4B;AAC5B,8BAAyB;AACzB,+BAA0B;AAC1B,8BAAyB;AACzB,kCAA6B;AAC7B,gCAA2B;AAC3B,+BAA0B;AAE1B,kBAAe,IAAI,CAAC","sourcesContent":["import {onConnected, IBKRConnection} from './connection';\n\ninterface IBKR {\n    host: string;\n    port: number;\n}\n// Export main\nconst ibkr = (args?: IBKR): Promise<boolean> => {\n    // Default from these envs\n    const {IB_PORT = 4003, IB_HOST = 'localhost'} = process.env || {};\n\n    const {host = IB_HOST, port = IB_PORT} = args || {};\n\n    IBKRConnection.Instance.init(host, +port);\n\n    return new Promise((resolve, reject) => {\n        async function runIbkrApp() {\n            const connection = await onConnected();\n            if (connection) {\n                return resolve(true);\n            }\n            reject('Failed to connect IBKR, please try again');\n        }\n\n        runIbkrApp();\n    });\n};\n\n// Export all modules\nexport * from './account';\nexport * from './connection';\nexport * from './contracts';\nexport * from './events';\nexport * from './history';\nexport * from './orders';\nexport * from './portfolios';\nexport * from './realtime';\nexport * from './scanner';\n\nexport default ibkr;\n"]}