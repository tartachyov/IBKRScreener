{"version":3,"file":"ContractDetails.js","sourceRoot":"","sources":["../../src/contracts/ContractDetails.ts"],"names":[],"mappings":";;;;;AACA,mDAAmD;AACnD,gFAA0D;AAE7C,QAAA,kBAAkB,GAAG,UAC9B,QAAsB;IAEtB,IAAI,WAAW,GAAQ,QAAQ,CAAC;IAChC,IAAM,cAAc,GAAsB,EAAS,CAAC;IAEpD,IAAM,KAAK,GAAW,0BAAa,EAAE,CAAC;IAEtC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO;QACvB,IAAM,EAAE,GAAG,wBAAc,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QAE7C,8CAA8C;QAE9C,IAAI,OAAO,WAAW,KAAK,QAAQ,EAAE;YACjC,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;SAChD;QAED,IAAM,cAAc,GAAG,UAAC,KAAK,EAAE,gBAAgB;YAC3C,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC1C,CAAC,CAAC;QAEF,EAAE,CAAC,EAAE,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAAC;QAEzC,EAAE,CAAC,IAAI,CAAC,oBAAoB,EAAE,UAAC,MAAM;YACjC,IAAI,KAAK,KAAK,MAAM,EAAE;gBAClB,EAAE,CAAC,GAAG,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAAC;gBAC1C,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;oBAC9B,OAAO,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;iBACrC;gBACD,OAAO,CAAC,cAAc,CAAC,CAAC;aAC3B;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kBAAkB,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;AACP,CAAC,CAAC","sourcesContent":["import {ContractDetails} from './contracts.interfaces';\nimport {getRadomReqId} from '../_utils/text.utils';\nimport IBKRConnection from '../connection/IBKRConnection';\n\nexport const getContractDetails = (\n    contract: string | any\n): Promise<ContractDetails | ContractDetails[]> => {\n    let contractArg: any = contract;\n    const contractsLocal: ContractDetails[] = [] as any;\n\n    const reqId: number = getRadomReqId();\n\n    return new Promise((resolve) => {\n        const ib = IBKRConnection.Instance.getIBKR();\n\n        // If string, create stock contract as default\n\n        if (typeof contractArg === 'string') {\n            contractArg = ib.contract.stock(contractArg);\n        }\n\n        const handleContract = (reqId, contractReceived) => {\n            contractsLocal.push(contractReceived);\n        };\n\n        ib.on('contractDetails', handleContract);\n\n        ib.once('contractDetailsEnd', (reqIdX) => {\n            if (reqId === reqIdX) {\n                ib.off('contractDetails', handleContract);\n                if (typeof contract === 'string') {\n                    return resolve(contractsLocal[0]);\n                }\n                resolve(contractsLocal);\n            }\n        });\n\n        ib.reqContractDetails(reqId, contractArg);\n    });\n};\n"]}