{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,kDAA4B;AAC5B,iCAAsC;AACtC,kDAAsB;AACtB,0DAA4B;AAC5B,4DAAsC;AAEtC,kDAA4B;AAC5B,wDAAkC;AAClC,gDAA2B;AAE3B;IAAiB,sBAAY;IAO3B,YAAY,OAAO;QAAnB,YACE,iBAAO,SAGR;QARD,cAAQ,GAAG,kBAAQ,CAAC;QACpB,WAAK,GAAG,eAAK,CAAC;QACd,UAAI,GAAG,cAAK,CAAC;QASb,WAAK,GAAG;YACN,IAAI,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACjD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,EAAE;gBAC/B,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;gBACb,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aACpB,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,aAAO,GAAG;YACR,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YAErC,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,gBAAU,GAAG;YACX,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;YAExC,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,gCAA0B,GAAG,UAAU,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU;YAC7E,IAAI,CAAC,KAAK,CAAC,4BAA4B,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;YAEnF,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,0BAAoB,GAAG,UAAU,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU;YACtE,IAAI,CAAC,KAAK,CAAC,sBAAsB,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;YAE5E,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,0BAAoB,GAAG,UAAU,KAAK;YACpC,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,+BAA+B,GAAG,KAAK,CAAC,CAAC;YAEnE,IAAI,CAAC,KAAK,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;YAE1C,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,0BAAoB,GAAG,UAAU,KAAK;YACpC,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,+BAA+B,GAAG,KAAK,CAAC,CAAC;YAEnE,IAAI,CAAC,KAAK,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;YAE1C,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,+BAAyB,GAAG,UAAU,KAAK;YACzC,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,+BAA+B,GAAG,KAAK,CAAC,CAAC;YAEnE,IAAI,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;YAE/C,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,sCAAgC,GAAG,UAAU,KAAK;YAChD,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,+BAA+B,GAAG,KAAK,CAAC,CAAC;YAEnE,IAAI,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;YAEtD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,gCAA0B,GAAG,UAAU,KAAK;YAC1C,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,+BAA+B,GAAG,KAAK,CAAC,CAAC;YAEnE,IAAI,CAAC,KAAK,CAAC,4BAA4B,EAAE,KAAK,CAAC,CAAC;YAEhD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,2BAAqB,GAAG,UAAU,KAAK;YACrC,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,+BAA+B,GAAG,KAAK,CAAC,CAAC;YAEnE,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;YAE3C,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,0BAAoB,GAAG,UAAU,QAAQ;YACvC,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,kCAAkC,GAAG,QAAQ,CAAC,CAAC;YAE5E,IAAI,CAAC,KAAK,CAAC,sBAAsB,EAAE,QAAQ,CAAC,CAAC;YAE7C,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,mBAAa,GAAG,UAAU,QAAQ;YAChC,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,kCAAkC,GAAG,QAAQ,CAAC,CAAC;YAE5E,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;YAEtC,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,oBAAc,GAAG,UAAU,QAAQ;YACjC,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,kCAAkC,GAAG,QAAQ,CAAC,CAAC;YAE5E,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,QAAQ,CAAC,CAAC;YAEvC,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,yBAAmB,GAAG;YACpB,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;YAElC,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,iBAAW,GAAG,UAAU,EAAE;YACxB,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,4BAA4B,GAAG,EAAE,CAAC,CAAC;YAE1D,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;YAE9B,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,qBAAe,GAAG;YAChB,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;YAE9B,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,wBAAkB,GAAG,UAAU,QAAQ;YACrC,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,kCAAkC,GAAG,QAAQ,CAAC,CAAC;YAE5E,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE,QAAQ,CAAC,CAAC;YAE3C,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,+BAAyB,GAAG,UAAU,QAAQ;YAC5C,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,kCAAkC,GAAG,QAAQ,CAAC,CAAC;YAE5E,IAAI,CAAC,KAAK,CAAC,2BAA2B,EAAE,QAAQ,CAAC,CAAC;YAElD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,qBAAe,GAAG,UAAU,QAAQ,EAAE,QAAQ,EAAE,cAAc,EAAE,gBAAgB,EAC9E,OAAO,EAAE,QAAQ;YACjB,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,kCAAkC,GAAG,QAAQ,CAAC,CAAC;YAC5E,gBAAM,CAAC,gBAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,sCAAsC,GAAG,QAAQ,CAAC,CAAC;YACrF,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,wCAAwC,GAAG,cAAc,CAAC,CAAC;YAC9F,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE,0CAA0C,GAAG,gBAAgB,CAAC,CAAC;YACpG,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,+BAA+B,GAAG,OAAO,CAAC,CAAC;YACvE,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,kCAAkC,GAAG,QAAQ,CAAC,CAAC;YAE5E,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,QAAQ,EAAE,QAAQ,EAAE,cAAc,EAAE,gBAAgB,EAChF,OAAO,EAAE,QAAQ,CAAC,CAAC;YAErB,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,gBAAU,GAAG,UAAU,EAAE,EAAE,QAAQ,EAAE,KAAK;YACxC,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,4BAA4B,GAAG,EAAE,CAAC,CAAC;YAC1D,gBAAM,CAAC,gBAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,sCAAsC,GAAG,QAAQ,CAAC,CAAC;YACrF,gBAAM,CAAC,gBAAC,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,mCAAmC,GAAG,KAAK,CAAC,CAAC;YAE5E,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;YAE9C,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,eAAS,GAAG,UAAU,UAAU,EAAE,GAAG;YACnC,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,oCAAoC,GAAG,UAAU,CAAC,CAAC;YAClF,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,2BAA2B,GAAG,GAAG,CAAC,CAAC;YAE3D,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,UAAU,EAAE,GAAG,CAAC,CAAC;YAEzC,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,uBAAiB,GAAG,UAAU,KAAK,EAAE,KAAK,EAAE,IAAI;YAC9C,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,+BAA+B,GAAG,KAAK,CAAC,CAAC;YACnE,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,6BAA6B,GAAG,KAAK,CAAC,CAAC;YACjE,gBAAM,CAAC,gBAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,gBAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,mCAAmC,GAAG,IAAI,CAAC,CAAC;YAExF,IAAI,gBAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAAE,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAAE;YAE/C,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;YAEpD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,uBAAiB,GAAG,UAAU,SAAS,EAAE,QAAQ;YAC/C,gBAAM,CAAC,gBAAC,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,kCAAkC,GAAG,SAAS,CAAC,CAAC;YAC/E,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,gCAAgC,GAAG,QAAQ,CAAC,CAAC;YAE1E,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;YAErD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,4BAAsB,GAAG,UAAU,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,YAAY;YACzE,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,+BAA+B,GAAG,KAAK,CAAC,CAAC;YACnE,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,gCAAgC,GAAG,QAAQ,CAAC,CAAC;YAC1E,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,gBAAC,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,yCAAyC,GAAG,SAAS,CAAC,CAAC;YAC5G,gBAAM,CAAC,gBAAC,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,qCAAqC,GAAG,YAAY,CAAC,CAAC;YAExF,IAAI,CAAC,KAAK,CAAC,wBAAwB,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC;YAE/E,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,sBAAgB,GAAG;YACjB,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;YAE/B,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,uBAAiB,GAAG,UAAU,SAAS;YACrC,gBAAM,CAAC,gBAAC,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,kCAAkC,GAAG,SAAS,CAAC,CAAC;YAE/E,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE,SAAS,CAAC,CAAC;YAE3C,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,wBAAkB,GAAG,UAAU,KAAK,EAAE,QAAQ;YAC5C,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,+BAA+B,GAAG,KAAK,CAAC,CAAC;YACnE,gBAAM,CAAC,gBAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,sCAAsC,GAAG,QAAQ,CAAC,CAAC;YAErF,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;YAElD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,oBAAc,GAAG;YACf,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;YAE7B,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,mBAAa,GAAG,UAAU,KAAK,EAAE,MAAM;YACrC,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,+BAA+B,GAAG,KAAK,CAAC,CAAC;YACnE,gBAAM,CAAC,gBAAC,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,oCAAoC,GAAG,MAAM,CAAC,CAAC;YAE/E,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;YAE3C,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,wBAAkB,GAAG,UAAU,KAAK,EAAE,QAAQ,EAAE,UAAU;YACxD,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,+BAA+B,GAAG,KAAK,CAAC,CAAC;YACnE,gBAAM,CAAC,gBAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,sCAAsC,GAAG,QAAQ,CAAC,CAAC;YACrF,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,kCAAkC,GAAG,UAAU,CAAC,CAAC;YAEhF,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;YAE9D,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,qBAAe,GAAG;YAChB,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;YAE9B,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,sBAAgB,GAAG,UAAU,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU;YAC1E,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,+BAA+B,GAAG,KAAK,CAAC,CAAC;YACnE,gBAAM,CAAC,gBAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,sCAAsC,GAAG,QAAQ,CAAC,CAAC;YACrF,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,kCAAkC,GAAG,UAAU,CAAC,CAAC;YAChF,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,gCAAgC,GAAG,MAAM,CAAC,CAAC;YACtE,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,oCAAoC,GAAG,UAAU,CAAC,CAAC;YAClF,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;QAClF,CAAC,CAAC;QAEF,wBAAkB,GAAG,UAAU,KAAK,EAAE,gBAAgB,EAAE,cAAc,EAAE,iBAAiB,EAAE,eAAe;YACxG,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,+BAA+B,GAAG,KAAK,CAAC,CAAC;YACnE,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE,wCAAwC,GAAG,gBAAgB,CAAC,CAAC;YAClG,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,sCAAsC,GAAG,cAAc,CAAC,CAAC;YAC5F,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,yCAAyC,GAAG,iBAAiB,CAAC,CAAC;YAClG,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,yCAAyC,GAAG,eAAe,CAAC,CAAC;YAEjG,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,EAAE,gBAAgB,EAAE,cAAc,EAAE,iBAAiB,EAAE,eAAe,CAAC,CAAC;YAC9G,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,uBAAiB,GAAG,UAAU,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,WAAW,EACxE,cAAc,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,YAAY;YAC5D,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,kCAAkC,GAAG,QAAQ,CAAC,CAAC;YAC5E,gBAAM,CAAC,gBAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,sCAAsC,GAAG,QAAQ,CAAC,CAAC;YACrF,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,mCAAmC,GAAG,WAAW,CAAC,CAAC;YACnF,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,mCAAmC,GAAG,WAAW,CAAC,CAAC;YACnF,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,sCAAsC,GAAG,cAAc,CAAC,CAAC;YAC5F,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,kCAAkC,GAAG,UAAU,CAAC,CAAC;YAChF,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,gCAAgC,GAAG,MAAM,CAAC,CAAC;YACtE,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,oCAAoC,GAAG,UAAU,CAAC,CAAC;YAClF,gBAAM,CAAC,gBAAC,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,sCAAsC,GAAG,YAAY,CAAC,CAAC;YAEzF,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,WAAW,EAC1E,cAAc,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;YAEhE,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,wBAAkB,GAAG,UAAU,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,aAAa,EAC1F,UAAU,EAAE,MAAM,EAAE,UAAU;YAC9B,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,kCAAkC,GAAG,QAAQ,CAAC,CAAC;YAC5E,gBAAM,CAAC,gBAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,sCAAsC,GAAG,QAAQ,CAAC,CAAC;YACrF,IAAI,aAAa,IAAI,WAAW,IAAI,CAAC,aAAa,IAAI,CAAC,WAAW,EAAE;gBAClE,gBAAM,CAAC,IAAI,CAAC,+EAA+E,GAAG,aAAa,GAAG,GAAG,GAAG,WAAW,CAAC,CAAC;aAClI;YACD,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,qCAAqC,GAAG,aAAa,CAAC,CAAC;YACzF,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,kCAAkC,GAAG,UAAU,CAAC,CAAC;YAChF,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,gCAAgC,GAAG,MAAM,CAAC,CAAC;YACtE,gBAAM,CAAC,gBAAC,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,oCAAoC,GAAG,UAAU,CAAC,CAAC;YAEnF,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,aAAa,EAC5F,UAAU,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;YAElC,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,uBAAiB,GAAG,UAAU,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,UAAU;YACnF,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,kCAAkC,GAAG,QAAQ,CAAC,CAAC;YAC5E,gBAAM,CAAC,gBAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,sCAAsC,GAAG,QAAQ,CAAC,CAAC;YACrF,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,gCAAgC,GAAG,QAAQ,CAAC,CAAC;YAC1E,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,qCAAqC,GAAG,aAAa,CAAC,CAAC;YACzF,gBAAM,CAAC,gBAAC,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,oCAAoC,GAAG,UAAU,CAAC,CAAC;YAEnF,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC;YAEzF,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,0BAAoB,GAAG,UAAU,QAAQ;YACvC,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,kCAAkC,GAAG,QAAQ,CAAC,CAAC;YAE5E,IAAI,CAAC,KAAK,CAAC,sBAAsB,EAAE,QAAQ,CAAC,CAAC;YAE7C,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,YAAM,GAAG,UAAU,MAAM;YACvB,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,gCAAgC,GAAG,MAAM,CAAC,CAAC;YAEtE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAE7B,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,qBAAe,GAAG;YAChB,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;YAE9B,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,uBAAiB,GAAG,UAAU,cAAc;YAC1C,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,wCAAwC,GAAG,cAAc,CAAC,CAAC;YAE9F,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE,cAAc,CAAC,CAAC;YAEhD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,gBAAU,GAAG,UAAU,QAAQ,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,kBAAkB;YACtF,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,kCAAkC,GAAG,QAAQ,CAAC,CAAC;YAC5E,gBAAM,CAAC,gBAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,sCAAsC,GAAG,QAAQ,CAAC,CAAC;YACrF,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,uCAAuC,GAAG,eAAe,CAAC,CAAC;YAC/F,gBAAM,CAAC,gBAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,iCAAiC,GAAG,QAAQ,CAAC,CAAC;YAC5E,gBAAM,CAAC,gBAAC,CAAC,SAAS,CAAC,kBAAkB,CAAC,EAAE,2CAA2C,GAAG,kBAAkB,CAAC,CAAC;YAE1G,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,QAAQ,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,kBAAkB,CAAC,CAAC;YAE5F,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,iBAAW,GAAG,UAAU,QAAQ,EAAE,QAAQ,EAAE,OAAO;YACjD,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,kCAAkC,GAAG,QAAQ,CAAC,CAAC;YAC5E,gBAAM,CAAC,gBAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,sCAAsC,GAAG,QAAQ,CAAC,CAAC;YACrF,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,iCAAiC,GAAG,OAAO,CAAC,CAAC;YAEzE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;YAEvD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,sBAAgB,GAAG,UAAU,OAAO;YAClC,gBAAM,CAAC,gBAAC,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,gCAAgC,GAAG,OAAO,CAAC,CAAC;YAEzE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;YAExC,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,mBAAa,GAAG;YACd,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;YAE5B,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,kBAAY,GAAG;YACb,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;YAE3B,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,8FAA8F;QAC9F,uBAAiB,GAAG,UAAU,KAAK,EAAE,OAAO,EAAE,SAAS;YACrD,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,+BAA+B,GAAG,KAAK,CAAC,CAAC;YACnE,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,+BAA+B,GAAG,OAAO,CAAC,CAAC;YACvE,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,gBAAC,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,yCAAyC,GAAG,SAAS,CAAC,CAAC;YAE5G,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;YAE3D,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,qBAAe,GAAG,UAAU,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM;YACzE,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,kCAAkC,GAAG,QAAQ,CAAC,CAAC;YAC5E,gBAAM,CAAC,gBAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,sCAAsC,GAAG,QAAQ,CAAC,CAAC;YACrF,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,iCAAiC,GAAG,OAAO,CAAC,CAAC;YACzE,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,kCAAkC,GAAG,UAAU,CAAC,CAAC;YAChF,gBAAM,CAAC,gBAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,+BAA+B,GAAG,MAAM,CAAC,CAAC;YAEtE,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;YAE/E,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,0BAAoB,GAAG;YACrB,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,4BAAsB,GAAG,UAAU,QAAQ,EAAE,YAAY;YACvD,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,kCAAkC,GAAG,QAAQ,CAAC,CAAC;YAC5E,gBAAM,CAAC,gBAAC,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,0CAA0C,GAAG,YAAY,CAAC,CAAC;YAEjG,IAAI,CAAC,KAAK,CAAC,wBAAwB,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;YAE7D,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,eAAS,GAAG,UAAU,UAAU;YAC9B,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,oCAAoC,GAAG,UAAU,CAAC,CAAC;YAElF,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;YAEpC,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,uBAAiB,GAAG,UAAU,QAAQ;YACpC,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,kCAAkC,GAAG,QAAQ,CAAC,CAAC;YAE5E,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC;YAE1C,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,wBAAkB,GAAG,UAAU,KAAK;YAClC,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,+BAA+B,GAAG,KAAK,CAAC,CAAC;YAEnE,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;YAExC,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,wBAAkB,GAAG,UAAU,KAAK,EAAE,YAAY;YAChD,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,+BAA+B,GAAG,KAAK,CAAC,CAAC;YACnE,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,qCAAqC,GAAG,YAAY,CAAC,CAAC;YAEvF,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC;YAEtD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,4BAAsB,GAAG,UAAU,KAAK,EAAE,OAAO;YAC/C,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,+BAA+B,GAAG,KAAK,CAAC,CAAC;YACnE,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,iCAAiC,GAAG,OAAO,CAAC,CAAC;YAEzE,IAAI,CAAC,KAAK,CAAC,wBAAwB,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YAErD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,8BAAwB,GAAG,UAAU,KAAK;YACxC,gBAAM,CAAC,gBAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,+BAA+B,GAAG,KAAK,CAAC,CAAC;YAEnE,IAAI,CAAC,KAAK,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;YAE9C,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QA3eA,KAAI,CAAC,WAAW,GAAG,IAAI,oBAAU,CAAC,KAAI,EAAE,OAAO,CAAC,CAAC;QACjD,KAAI,CAAC,EAAE,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC,CAAC;;IACpC,CAAC;IA2eH,SAAC;AAAD,CAAC,AAtfD,CAAiB,qBAAY,GAsf5B;AAED,oBAAoB;AACpB,gBAAC,CAAC,IAAI,CAAC,mBAAC,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG;IAC7B,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,SAAS,EAAE,GAAG,EAAE;QACvC,GAAG,EAAE;YACH,OAAO,mBAAC,CAAC,GAAG,CAAC,CAAC;QAChB,CAAC;KACF,CAAC,CAAC;IACH,MAAM,CAAC,cAAc,CAAC,EAAE,EAAE,GAAG,EAAE;QAC7B,GAAG,EAAE;YACH,OAAO,mBAAC,CAAC,GAAG,CAAC,CAAC;QAChB,CAAC;KACF,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,iBAAS,EAAE,CAAC","sourcesContent":["import assert from 'assert';\nimport { EventEmitter } from 'events';\nimport _ from 'lodash'\nimport C from './constants';\nimport Controller from './controller';\n\nimport order from './order';\nimport contract from './contract';\nimport utils from './util';\n\nclass IB extends EventEmitter {\n  _controller: any;\n\n  contract = contract;\n  order = order;\n  util = utils;\n\n  constructor(options) {\n    super();\n    this._controller = new Controller(this, options);\n    this.on('error', function () { });\n  }\n\n\n  _send = function () {\n    var args = Array.prototype.slice.call(arguments);\n    this._controller.schedule('api', {\n      func: args[0],\n      args: args.slice(1)\n    });\n  };\n\n  connect = function (): IB {\n    this._controller.schedule('connect');\n\n    return this;\n  };\n\n  disconnect = function () {\n    this._controller.schedule('disconnect');\n\n    return this;\n  };\n\n  calculateImpliedVolatility = function (reqId, contract, optionPrice, underPrice) {\n    this._send('calculateImpliedVolatility', reqId, contract, optionPrice, underPrice);\n\n    return this;\n  };\n\n  calculateOptionPrice = function (reqId, contract, volatility, underPrice) {\n    this._send('calculateOptionPrice', reqId, contract, volatility, underPrice);\n\n    return this;\n  };\n\n  cancelAccountSummary = function (reqId) {\n    assert(_.isNumber(reqId), '\"reqId\" must be an integer - ' + reqId);\n\n    this._send('cancelAccountSummary', reqId);\n\n    return this;\n  };\n\n  cancelPositionsMulti = function (reqId) {\n    assert(_.isNumber(reqId), '\"reqId\" must be an integer - ' + reqId);\n\n    this._send('cancelPositionsMulti', reqId);\n\n    return this;\n  };\n\n  cancelAccountUpdatesMulti = function (reqId) {\n    assert(_.isNumber(reqId), '\"reqId\" must be an integer - ' + reqId);\n\n    this._send('cancelAccountUpdatesMulti', reqId);\n\n    return this;\n  };\n\n  cancelCalculateImpliedVolatility = function (reqId) {\n    assert(_.isNumber(reqId), '\"reqId\" must be an integer - ' + reqId);\n\n    this._send('cancelCalculateImpliedVolatility', reqId);\n\n    return this;\n  };\n\n  cancelCalculateOptionPrice = function (reqId) {\n    assert(_.isNumber(reqId), '\"reqId\" must be an integer - ' + reqId);\n\n    this._send('cancelCalculateOptionPrice', reqId);\n\n    return this;\n  };\n\n  cancelFundamentalData = function (reqId) {\n    assert(_.isNumber(reqId), '\"reqId\" must be an integer - ' + reqId);\n\n    this._send('cancelFundamentalData', reqId);\n\n    return this;\n  };\n\n  cancelHistoricalData = function (tickerId) {\n    assert(_.isNumber(tickerId), '\"tickerId\" must be an integer - ' + tickerId);\n\n    this._send('cancelHistoricalData', tickerId);\n\n    return this;\n  };\n\n  cancelMktData = function (tickerId) {\n    assert(_.isNumber(tickerId), '\"tickerId\" must be an integer - ' + tickerId);\n\n    this._send('cancelMktData', tickerId);\n\n    return this;\n  };\n\n  cancelMktDepth = function (tickerId) {\n    assert(_.isNumber(tickerId), '\"tickerId\" must be an integer - ' + tickerId);\n\n    this._send('cancelMktDepth', tickerId);\n\n    return this;\n  };\n\n  cancelNewsBulletins = function () {\n    this._send('cancelNewsBulletins');\n\n    return this;\n  };\n\n  cancelOrder = function (id) {\n    assert(_.isNumber(id), '\"id\" must be an integer - ' + id);\n\n    this._send('cancelOrder', id);\n\n    return this;\n  };\n\n  cancelPositions = function () {\n    this._send('cancelPositions');\n\n    return this;\n  };\n\n  cancelRealTimeBars = function (tickerId) {\n    assert(_.isNumber(tickerId), '\"tickerId\" must be an integer - ' + tickerId);\n\n    this._send('cancelRealTimeBars', tickerId);\n\n    return this;\n  };\n\n  cancelScannerSubscription = function (tickerId) {\n    assert(_.isNumber(tickerId), '\"tickerId\" must be an integer - ' + tickerId);\n\n    this._send('cancelScannerSubscription', tickerId);\n\n    return this;\n  };\n\n  exerciseOptions = function (tickerId, contract, exerciseAction, exerciseQuantity,\n    account, override) {\n    assert(_.isNumber(tickerId), '\"tickerId\" must be an integer - ' + tickerId);\n    assert(_.isPlainObject(contract), '\"contract\" must be a plain object - ' + contract);\n    assert(_.isNumber(exerciseAction), '\"exerciseAction\" must be an integer - ' + exerciseAction);\n    assert(_.isNumber(exerciseQuantity), '\"exerciseQuantity\" must be an integer - ' + exerciseQuantity);\n    assert(_.isString(account), '\"account\" must be a string - ' + account);\n    assert(_.isNumber(override), '\"override\" must be an integer - ' + override);\n\n    this._send('exerciseOptions', tickerId, contract, exerciseAction, exerciseQuantity,\n      account, override);\n\n    return this;\n  };\n\n  placeOrder = function (id, contract, order) {\n    assert(_.isNumber(id), '\"id\" must be an integer - ' + id);\n    assert(_.isPlainObject(contract), '\"contract\" must be a plain object - ' + contract);\n    assert(_.isPlainObject(order), '\"order\" must be a plain object - ' + order);\n\n    this._send('placeOrder', id, contract, order);\n\n    return this;\n  };\n\n  replaceFA = function (faDataType, xml) {\n    assert(_.isNumber(faDataType), '\"faDataType\" must be an integer - ' + faDataType);\n    assert(_.isString(xml), '\"xml\" must be a string - ' + xml);\n\n    this._send('replaceFA', faDataType, xml);\n\n    return this;\n  };\n\n  reqAccountSummary = function (reqId, group, tags) {\n    assert(_.isNumber(reqId), '\"reqId\" must be an integer - ' + reqId);\n    assert(_.isString(group), '\"group\" must be a string - ' + group);\n    assert(_.isArray(tags) || _.isString(tags), '\"tags\" must be array or string - ' + tags);\n\n    if (_.isArray(tags)) { tags = tags.join(','); }\n\n    this._send('reqAccountSummary', reqId, group, tags);\n\n    return this;\n  };\n\n  reqAccountUpdates = function (subscribe, acctCode) {\n    assert(_.isBoolean(subscribe), '\"subscribe\" must be a boolean - ' + subscribe);\n    assert(_.isString(acctCode), '\"acctCode\" must be a string - ' + acctCode);\n\n    this._send('reqAccountUpdates', subscribe, acctCode);\n\n    return this;\n  };\n\n  reqAccountUpdatesMulti = function (reqId, acctCode, modelCode, ledgerAndNLV) {\n    assert(_.isNumber(reqId), '\"reqId\" must be an integer - ' + reqId);\n    assert(_.isString(acctCode), '\"acctCode\" must be a string - ' + acctCode);\n    assert(_.isString(modelCode) || _.isNull(modelCode), '\"modelCode\" must be a string or null - ' + modelCode);\n    assert(_.isBoolean(ledgerAndNLV), '\"ledgerAndNLV\" must be a boolean - ' + ledgerAndNLV);\n\n    this._send('reqAccountUpdatesMulti', reqId, acctCode, modelCode, ledgerAndNLV);\n\n    return this;\n  };\n\n  reqAllOpenOrders = function () {\n    this._send('reqAllOpenOrders');\n\n    return this;\n  };\n\n  reqAutoOpenOrders = function (bAutoBind) {\n    assert(_.isBoolean(bAutoBind), '\"bAutoBind\" must be a boolean - ' + bAutoBind);\n\n    this._send('reqAutoOpenOrders', bAutoBind);\n\n    return this;\n  };\n\n  reqContractDetails = function (reqId, contract) {\n    assert(_.isNumber(reqId), '\"reqId\" must be an integer - ' + reqId);\n    assert(_.isPlainObject(contract), '\"contract\" must be a plain object - ' + contract);\n\n    this._send('reqContractDetails', reqId, contract);\n\n    return this;\n  };\n\n  reqCurrentTime = function () {\n    this._send('reqCurrentTime');\n\n    return this;\n  };\n\n  reqExecutions = function (reqId, filter) {\n    assert(_.isNumber(reqId), '\"reqId\" must be an integer - ' + reqId);\n    assert(_.isPlainObject(filter), '\"filter\" must be a plain object - ' + filter);\n\n    this._send('reqExecutions', reqId, filter);\n\n    return this;\n  };\n\n  reqFundamentalData = function (reqId, contract, reportType) {\n    assert(_.isNumber(reqId), '\"reqId\" must be an integer - ' + reqId);\n    assert(_.isPlainObject(contract), '\"contract\" must be a plain object - ' + contract);\n    assert(_.isString(reportType), '\"reportType\" must be a string - ' + reportType);\n\n    this._send('reqFundamentalData', reqId, contract, reportType);\n\n    return this;\n  };\n\n  reqGlobalCancel = function () {\n    this._send('reqGlobalCancel');\n\n    return this;\n  };\n\n  reqHeadTimestamp = function (reqId, contract, whatToShow, useRTH, formatDate) {\n    assert(_.isNumber(reqId), '\"reqId\" must be an integer - ' + reqId);\n    assert(_.isPlainObject(contract), '\"contract\" must be a plain object - ' + contract);\n    assert(_.isString(whatToShow), '\"whatToShow\" must be a string - ' + whatToShow);\n    assert(_.isNumber(useRTH), '\"useRTH\" must be an integer - ' + useRTH);\n    assert(_.isNumber(formatDate), '\"formatDate\" must be an integer - ' + formatDate);\n    this._send('reqHeadTimestamp', reqId, contract, whatToShow, useRTH, formatDate);\n  };\n\n  reqSecDefOptParams = function (reqId, underlyingSymbol, futFopExchange, underlyingSecType, underlyingConId) {\n    assert(_.isNumber(reqId), '\"reqId\" must be an integer - ' + reqId);\n    assert(_.isString(underlyingSymbol), '\"underlyingSymbol\" must be a string - ' + underlyingSymbol);\n    assert(_.isString(futFopExchange), '\"futFopExchange\" must be a string - ' + futFopExchange);\n    assert(_.isString(futFopExchange), '\"underlyingSecType\" must be a string - ' + underlyingSecType);\n    assert(_.isNumber(underlyingConId), '\"underlyingConId\" must be an integer - ' + underlyingConId);\n\n    this._send('reqSecDefOptParams', reqId, underlyingSymbol, futFopExchange, underlyingSecType, underlyingConId);\n    return this;\n  };\n\n  reqHistoricalData = function (tickerId, contract, endDateTime, durationStr,\n    barSizeSetting, whatToShow, useRTH, formatDate, keepUpToDate) {\n    assert(_.isNumber(tickerId), '\"tickerId\" must be an integer - ' + tickerId);\n    assert(_.isPlainObject(contract), '\"contract\" must be a plain object - ' + contract);\n    assert(_.isString(endDateTime), '\"endDateTime\" must be a string - ' + endDateTime);\n    assert(_.isString(durationStr), '\"durationStr\" must be a string - ' + durationStr);\n    assert(_.isString(barSizeSetting), '\"barSizeSetting\" must be a string - ' + barSizeSetting);\n    assert(_.isString(whatToShow), '\"whatToShow\" must be a string - ' + whatToShow);\n    assert(_.isNumber(useRTH), '\"useRTH\" must be an integer - ' + useRTH);\n    assert(_.isNumber(formatDate), '\"formatDate\" must be an integer - ' + formatDate);\n    assert(_.isBoolean(keepUpToDate), '\"keepUpToDate\" must be an boolean - ' + keepUpToDate);\n\n    this._send('reqHistoricalData', tickerId, contract, endDateTime, durationStr,\n      barSizeSetting, whatToShow, useRTH, formatDate, keepUpToDate);\n\n    return this;\n  };\n\n  reqHistoricalTicks = function (tickerId, contract, startDateTime, endDateTime, numberOfTicks,\n    whatToShow, useRTH, ignoreSize) {\n    assert(_.isNumber(tickerId), '\"tickerId\" must be an integer - ' + tickerId);\n    assert(_.isPlainObject(contract), '\"contract\" must be a plain object - ' + contract);\n    if (startDateTime && endDateTime || !startDateTime && !endDateTime) {\n      assert.fail('specify one of \"startDateTime\" or \"endDateTime\" (as a string) but not both - ' + startDateTime + ':' + endDateTime);\n    }\n    assert(_.isNumber(numberOfTicks), '\"numberOfTicks\" must be a number - ' + numberOfTicks);\n    assert(_.isString(whatToShow), '\"whatToShow\" must be a string - ' + whatToShow);\n    assert(_.isNumber(useRTH), '\"useRTH\" must be an integer - ' + useRTH);\n    assert(_.isBoolean(ignoreSize), '\"ignoreSize\" must be an boolean - ' + ignoreSize);\n\n    this._send('reqHistoricalTicks', tickerId, contract, startDateTime, endDateTime, numberOfTicks,\n      whatToShow, useRTH, ignoreSize);\n\n    return this;\n  };\n\n  reqTickByTickData = function (tickerId, contract, tickType, numberOfTicks, ignoreSize) {\n    assert(_.isNumber(tickerId), '\"tickerId\" must be an integer - ' + tickerId);\n    assert(_.isPlainObject(contract), '\"contract\" must be a plain object - ' + contract);\n    assert(_.isString(tickType), '\"tickType\" must be a string - ' + tickType);\n    assert(_.isNumber(numberOfTicks), '\"numberOfTicks\" must be a number - ' + numberOfTicks);\n    assert(_.isBoolean(ignoreSize), '\"ignoreSize\" must be an boolean - ' + ignoreSize);\n\n    this._send('reqTickByTickData', tickerId, contract, tickType, numberOfTicks, ignoreSize);\n\n    return this;\n  };\n\n  cancelTickByTickData = function (tickerId) {\n    assert(_.isNumber(tickerId), '\"tickerId\" must be an integer - ' + tickerId);\n\n    this._send('cancelTickByTickData', tickerId);\n\n    return this;\n  };\n\n  reqIds = function (numIds) {\n    assert(_.isNumber(numIds), '\"numIds\" must be an integer - ' + numIds);\n\n    this._send('reqIds', numIds);\n\n    return this;\n  };\n\n  reqManagedAccts = function () {\n    this._send('reqManagedAccts');\n\n    return this;\n  };\n\n  reqMarketDataType = function (marketDataType) {\n    assert(_.isNumber(marketDataType), '\"marketDataType\" must be an integer - ' + marketDataType);\n\n    this._send('reqMarketDataType', marketDataType);\n\n    return this;\n  };\n\n  reqMktData = function (tickerId, contract, genericTickList, snapshot, regulatorySnapshot) {\n    assert(_.isNumber(tickerId), '\"tickerId\" must be an integer - ' + tickerId);\n    assert(_.isPlainObject(contract), '\"contract\" must be a plain object - ' + contract);\n    assert(_.isString(genericTickList), '\"genericTickList\" must be a string - ' + genericTickList);\n    assert(_.isBoolean(snapshot), '\"snapshot\" must be a boolean - ' + snapshot);\n    assert(_.isBoolean(regulatorySnapshot), '\"regulatorySnapshot\" must be a boolean - ' + regulatorySnapshot);\n\n    this._send('reqMktData', tickerId, contract, genericTickList, snapshot, regulatorySnapshot);\n\n    return this;\n  };\n\n  reqMktDepth = function (tickerId, contract, numRows) {\n    assert(_.isNumber(tickerId), '\"tickerId\" must be an integer - ' + tickerId);\n    assert(_.isPlainObject(contract), '\"contract\" must be a plain object - ' + contract);\n    assert(_.isNumber(numRows), '\"numRows\" must be an integer - ' + numRows);\n\n    this._send('reqMktDepth', tickerId, contract, numRows);\n\n    return this;\n  };\n\n  reqNewsBulletins = function (allMsgs) {\n    assert(_.isBoolean(allMsgs), '\"allMsgs\" must be a boolean - ' + allMsgs);\n\n    this._send('reqNewsBulletins', allMsgs);\n\n    return this;\n  };\n\n  reqOpenOrders = function () {\n    this._send('reqOpenOrders');\n\n    return this;\n  };\n\n  reqPositions = function () {\n    this._send('reqPositions');\n\n    return this;\n  };\n\n  // input params account here is acctCode, we name it account to be consistent with IB document\n  reqPositionsMulti = function (reqId, account, modelCode) {\n    assert(_.isNumber(reqId), '\"reqId\" must be an integer - ' + reqId);\n    assert(_.isString(account), '\"account\" must be a string - ' + account);\n    assert(_.isString(modelCode) || _.isNull(modelCode), '\"modelCode\" must be a string or null - ' + modelCode);\n\n    this._send('reqPositionsMulti', reqId, account, modelCode);\n\n    return this;\n  };\n\n  reqRealTimeBars = function (tickerId, contract, barSize, whatToShow, useRTH) {\n    assert(_.isNumber(tickerId), '\"tickerId\" must be an integer - ' + tickerId);\n    assert(_.isPlainObject(contract), '\"contract\" must be a plain object - ' + contract);\n    assert(_.isNumber(barSize), '\"barSize\" must be an integer - ' + barSize);\n    assert(_.isString(whatToShow), '\"whatToShow\" must be a string - ' + whatToShow);\n    assert(_.isBoolean(useRTH), '\"useRTH\" must be a boolean - ' + useRTH);\n\n    this._send('reqRealTimeBars', tickerId, contract, barSize, whatToShow, useRTH);\n\n    return this;\n  };\n\n  reqScannerParameters = function () {\n    this._send('reqScannerParameters');\n\n    return this;\n  };\n\n  reqScannerSubscription = function (tickerId, subscription) {\n    assert(_.isNumber(tickerId), '\"tickerId\" must be an integer - ' + tickerId);\n    assert(_.isPlainObject(subscription), '\"subscription\" must be a plain object - ' + subscription);\n\n    this._send('reqScannerSubscription', tickerId, subscription);\n\n    return this;\n  };\n\n  requestFA = function (faDataType) {\n    assert(_.isNumber(faDataType), '\"faDataType\" must be an integer - ' + faDataType);\n\n    this._send('requestFA', faDataType);\n\n    return this;\n  };\n\n  setServerLogLevel = function (logLevel) {\n    assert(_.isNumber(logLevel), '\"logLevel\" must be an integer - ' + logLevel);\n\n    this._send('setServerLogLevel', logLevel);\n\n    return this;\n  };\n\n  queryDisplayGroups = function (reqId) {\n    assert(_.isNumber(reqId), '\"reqId\" must be an integer - ' + reqId);\n\n    this._send('queryDisplayGroups', reqId);\n\n    return this;\n  };\n\n  updateDisplayGroup = function (reqId, contractInfo) {\n    assert(_.isNumber(reqId), '\"reqId\" must be an integer - ' + reqId);\n    assert(_.isString(contractInfo), '\"contractInfo\" must be an string - ' + contractInfo);\n\n    this._send('updateDisplayGroup', reqId, contractInfo);\n\n    return this;\n  };\n\n  subscribeToGroupEvents = function (reqId, groupId) {\n    assert(_.isNumber(reqId), '\"reqId\" must be an integer - ' + reqId);\n    assert(_.isString(groupId), '\"groupId\" must be an integer - ' + groupId);\n\n    this._send('subscribeToGroupEvents', reqId, groupId);\n\n    return this;\n  };\n\n  unsubscribeToGroupEvents = function (reqId) {\n    assert(_.isNumber(reqId), '\"reqId\" must be an integer - ' + reqId);\n\n    this._send('unsubscribeToGroupEvents', reqId);\n\n    return this;\n  };\n\n}\n\n// Attach constants.\n_.keys(C).forEach(function (key) {\n  Object.defineProperty(IB.prototype, key, {\n    get: function () {\n      return C[key];\n    }\n  });\n  Object.defineProperty(IB, key, {\n    get: function () {\n      return C[key];\n    }\n  });\n});\n\nexport = IB;\n"]}