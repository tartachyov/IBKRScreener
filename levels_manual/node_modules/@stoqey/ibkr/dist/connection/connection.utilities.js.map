{"version":3,"file":"connection.utilities.js","sourceRoot":"","sources":["../../src/connection/connection.utilities.ts"],"names":[],"mappings":";;;;;AAAA,mDAAgD;AAChD,+DAAsD;AACtD,oEAA8C;AAE9C;;GAEG;AACU,QAAA,WAAW,GAAG;IACvB,IAAM,SAAS,GAAG,uBAAU,CAAC,QAAQ,CAAC;IACtC,IAAM,IAAI,GAAG,wBAAc,CAAC,QAAQ,CAAC;IAErC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO;QACvB,IAAI,IAAI,CAAC,MAAM,KAAK,6BAAU,CAAC,SAAS,EAAE;YACtC,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC;SACxB;QAED,IAAM,eAAe,GAAG;YACpB,cAAc,EAAE,CAAC;YACjB,OAAO,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC,CAAC;QAEF,IAAM,gBAAgB,GAAG;YACrB,cAAc,EAAE,CAAC;YACjB,OAAO,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC,CAAC;QAEF,IAAM,cAAc,GAAG;YACnB,SAAS,CAAC,GAAG,CAAC,6BAAU,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;YACrD,SAAS,CAAC,GAAG,CAAC,6BAAU,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC;QAC7D,CAAC,CAAC;QAEF,SAAS,CAAC,EAAE,CAAC,6BAAU,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;QACpD,SAAS,CAAC,EAAE,CAAC,6BAAU,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC;QAExD,OAAO;QACP,SAAS,CAAC,IAAI,CAAC,6BAAU,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC","sourcesContent":["import {IbkrEvents} from '../events/IbkrEvents';\nimport {IBKREVENTS} from '../events/IBKREVENTS.const';\nimport IBKRConnection from './IBKRConnection';\n\n/**\n * Async function for getting IBKR @connected event\n */\nexport const onConnected = (): Promise<boolean> => {\n    const appEvents = IbkrEvents.Instance;\n    const ibkr = IBKRConnection.Instance;\n\n    return new Promise((resolve) => {\n        if (ibkr.status === IBKREVENTS.CONNECTED) {\n            return resolve(true);\n        }\n\n        const handleConnected = () => {\n            removeListners();\n            resolve(true);\n        };\n\n        const handleDisconnect = () => {\n            removeListners();\n            resolve(false);\n        };\n\n        const removeListners = () => {\n            appEvents.off(IBKREVENTS.CONNECTED, handleConnected);\n            appEvents.off(IBKREVENTS.DISCONNECTED, handleDisconnect);\n        };\n\n        appEvents.on(IBKREVENTS.CONNECTED, handleConnected);\n        appEvents.on(IBKREVENTS.DISCONNECTED, handleDisconnect);\n\n        // ping\n        appEvents.emit(IBKREVENTS.PING, {});\n    });\n};\n"]}