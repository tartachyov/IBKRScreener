{"version":3,"file":"controller.js","sourceRoot":"","sources":["../src/controller.ts"],"names":[],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport CommandBuffer from 'command-buffer';\nimport C from './constants';\nimport Socket from './socket';\nimport Incoming from './incoming';\nimport Outgoing from './outgoing';\n\nfunction Controller(ib, options) {\n  if (!_.isPlainObject(options)) { options = {}; }\n\n  _.defaults(options, {\n    host: C.DEFAULT_HOST,\n    port: C.DEFAULT_PORT,\n    clientId: C.DEFAULT_CLIENT_ID,\n  });\n\n  Object.defineProperty(this, 'options', {\n    get: function () {\n      return options;\n    }\n  });\n\n  this._ib = ib;\n  this._serverVersion = null;\n  this._serverConnectionTime = null;\n\n  this._socket = new Socket(this);\n  this._incoming = new Incoming(this);\n  this._outgoing = new Outgoing(this);\n\n  this._commands = new CommandBuffer(function (type, data) {\n    var funcName = '_' + type;\n    if (_.has(this.constructor.prototype, funcName) && _.isFunction(this[funcName])) {\n      this[funcName](data);\n    } else {\n      throw new Error('Missing function - ' + funcName);\n    }\n  }, this);\n}\n\nController.prototype._api = function (data) {\n  var func;\n  if (_.has(this._outgoing.constructor.prototype, data.func)) {\n    func = this._outgoing[data.func];\n    if (_.isFunction(func)) {\n      return func.apply(this._outgoing, data.args);\n    }\n  }\n  throw new Error('Unknown outgoing func - ' + data.func);\n};\n\nController.prototype._connect = function () {\n  if (!this._socket._connected) {\n    this._socket.connect();\n  } else {\n    this.emitError('Cannot connect if already connected.');\n  }\n};\n\nController.prototype._disconnect = function () {\n  if (this._socket._connected) {\n    this._socket.disconnect();\n  } else {\n    this.emitError('Cannot disconnect if already disconnected.');\n  }\n};\n\nController.prototype._send = function (data, async) {\n  if (this._socket._connected) {\n    this._socket.send(data, async);\n  } else {\n    this.emitError('Cannot send data when disconnected.');\n  }\n};\n\nController.prototype._sendAsync = function (data) {\n  this._send(data, true);\n};\n\nController.prototype.emit = function () {\n  var args = Array.prototype.slice.call(arguments);\n\n  if (args[0] === 'error' && !!args[1] && args[1].message) {\n    args[1] = args[1].message;\n  }\n\n  this._ib.emit.apply(this._ib, arguments);\n\n  var eventOfArgs = args[0];\n  var argsOfArgs = args.slice(1);\n\n  if (!_.includes(['connected', 'disconnected', 'error', 'received', 'sent', 'server'], eventOfArgs)) {\n    this._ib.emit('result', eventOfArgs, argsOfArgs);\n  }\n\n  this._ib.emit('all', eventOfArgs, argsOfArgs);\n};\n\nController.prototype.emitError = function (errMsg, data) {\n  this.emit('error', new Error(errMsg), data);\n};\n\nController.prototype.pause = function () {\n  this._commands.pause.apply(this._commands, arguments);\n};\n\nController.prototype.resume = function () {\n  this._commands.resume.apply(this._commands, arguments);\n};\n\nController.prototype.run = function () {\n  this._commands.run.apply(this._commands, arguments);\n};\n\nController.prototype.schedule = function () {\n  this._commands.schedule.apply(this._commands, arguments);\n};\n\nexport = Controller;\n"]}